import express from 'express';
import {
  getReportById,
  getReports,
  createReport,
  deleteReport,
  updateReport,
  getReportsCount,
  getPostsReportedCount,
  getUserWhoReportedCount,
} from '../services/reports.service';

const reportsController = express.Router();

reportsController.get('/', async (req, res) => {
  try {
    const reports = await getReports();
    res.json(reports);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reportsController.get('/posts', async (req, res) => {
  try {
    const posts = await getPostsReportedCount();
    res.json(posts);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reportsController.get('/users', async (req, res) => {
  try {
    const users = await getUserWhoReportedCount();
    res.json(users);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});


reportsController.get('/:user_id/:post_id', async (req, res) => {
  try {
    const { user_id, post_id } = req.params;
    const report = await getReportById(parseInt(user_id), parseInt(post_id));
    if (report) {
      res.json(report);
    } else {
      res.status(404).send('Report not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reportsController.post('/', async (req, res) => {
  try {
    const { user_id, post_id, reason } = req.body;
    const report = await createReport(
      parseInt(user_id),
      parseInt(post_id),
      reason,
    );
    res.json(report);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reportsController.put('/:user_id/:post_id', async (req, res) => {
  try {
    const { user_id, post_id } = req.params;
    const { reason } = req.body;
    const updatedReport = await updateReport(
      parseInt(user_id),
      parseInt(post_id),
      reason,
    );
    if (updatedReport) {
      res.json(updatedReport);
    } else {
      res.status(404).send('Report not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reportsController.delete('/:user_id/:post_id', async (req, res) => {
  try {
    const { user_id, post_id } = req.params;
    const deletedReport = await deleteReport(
      parseInt(user_id),
      parseInt(post_id),
    );
    if (deletedReport) {
      res.json(deletedReport);
    } else {
      res.status(404).send('Report not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reportsController.get('/count', async (req, res) => {
  try {
    const count = await getReportsCount();
    res.json({ count });
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

export default reportsController;
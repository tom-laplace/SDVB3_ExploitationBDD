import express from 'express';
import {
  createReaction,
  deleteReaction,
  getReactionById,
  getReactions,
  updateReaction,
} from '../services/reactions.service';

const reactionsController = express.Router();

reactionsController.get('/', async (_req, res) => {
  try {
    const reactions = await getReactions();
    res.json(reactions);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reactionsController.get('/:user_id/:post_id', async (req, res) => {
  try {
    const { user_id, post_id } = req.params;
    const reaction = await getReactionById(parseInt(user_id), parseInt(post_id));
    if (reaction) {
      res.json(reaction);
    } else {
      res.status(404).send('Reaction not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reactionsController.post('/', async (req, res) => {
  try {
    const { user_id, post_id, type } = req.body;
    const reaction = await createReaction(parseInt(user_id), parseInt(post_id), type);
    res.json(reaction);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reactionsController.put('/:user_id/:post_id', async (req, res) => {
  try {
    const { user_id, post_id } = req.params;
    const { type } = req.body;
    const updatedReaction = await updateReaction(parseInt(user_id), parseInt(post_id), { type });
    if (updatedReaction) {
      res.json(updatedReaction);
    } else {
      res.status(404).send('Reaction not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

reactionsController.delete('/:user_id/:post_id', async (req, res) => {
  try {
    const { user_id, post_id } = req.params;
    const deletedReaction = await deleteReaction(parseInt(user_id), parseInt(post_id));
    if (deletedReaction) {
      res.json(deletedReaction);
    } else {
      res.status(404).send('Reaction not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

export default reactionsController;

import express from 'express';
import {
  createUser,
  deleteUser,
  getUserById,
  getUsers,
  updateUser,
  getUsersWithReports,
  getUsersWithPostsWithoutReports
} from '../services/users.service';

const usersController = express.Router();

usersController.get('/', async (_req, res) => {
  try {
    const users = await getUsersWithPostsWithoutReports();
    res.json(users);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

usersController.get('/reports', async (_req, res) => {
  try {
    const users = await getUsersWithReports();
    res.json(users);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

usersController.get('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const user = await getUserById(parseInt(id));
    if (user) {
      res.json(user);
    } else {
      res.status(404).send('User not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

usersController.post('/', async (req, res) => {
  try {
    const { username, first_name, last_name, email } = req.body;
    const user = await createUser(username, first_name, last_name, email);
    res.json(user);
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

usersController.put('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { username, first_name, last_name, email } = req.body;
    const updatedUser = await updateUser(parseInt(id), {
      username,
      first_name,
      last_name,
      email,
    });
    if (updatedUser) {
      res.json(updatedUser);
    } else {
      res.status(404).send('User not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

usersController.delete('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const deletedUser = await deleteUser(parseInt(id));
    if (deletedUser) {
      res.json(deletedUser);
    } else {
      res.status(404).send('User not found');
    }
  } catch (err) {
    console.error(err);
    res.status(500).send('Internal Server Error');
  }
});

export default usersController;
